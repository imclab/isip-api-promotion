// Generated by CoffeeScript 1.4.0
(function() {
  var _base, _base1, _base2, _base3,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.JST || (window.JST = {});

  window.JST['species_index'] = _.template("<h1>Species</h1>\n<ul>\n  <%\n    var i, il, speciesModel;\n    for(i = 0, il=speciesModels.length; i<il; i++){\n      speciesModel = speciesModels[i];\n  %>\n    <li><%= view.addSubView(new Backbone.Views.SpeciesRowView({model: speciesModel})) %></li>\n  <%\n    }\n  %>\n</ul>");

  window.Backbone || (window.Backbone = {});

  (_base = window.Backbone).Views || (_base.Views = {});

  Backbone.Views.SpeciesIndexView = (function(_super) {

    __extends(SpeciesIndexView, _super);

    function SpeciesIndexView() {
      this.render = __bind(this.render, this);
      return SpeciesIndexView.__super__.constructor.apply(this, arguments);
    }

    SpeciesIndexView.prototype.template = JST['species_index'];

    SpeciesIndexView.prototype.initialize = function(options) {
      this.speciesList = new Backbone.Collections.SpeciesCollection();
      this.listenTo(this.speciesList, 'sync', this.render);
      this.speciesList.fetch();
      return this.render();
    };

    SpeciesIndexView.prototype.render = function() {
      this.closeSubViews();
      this.$el.html(this.template({
        view: this,
        speciesModels: this.speciesList.models
      }));
      this.renderSubViews();
      return this;
    };

    SpeciesIndexView.prototype.addSubView = function(subView) {
      this.subViews || (this.subViews = []);
      this.subViews.push(subView);
      return "<" + subView.tagName + " data-sub-view-cid=\"" + subView.cid + "\"></" + subView.tagName;
    };

    SpeciesIndexView.prototype.renderSubViews = function() {
      var subView, _i, _len, _ref, _results;
      if (this.subViews != null) {
        _ref = this.subViews;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          subView = _ref[_i];
          subView.setElement(this.$el.find("[data-sub-view-cid=\"" + subView.cid + "\"]"));
          _results.push(subView.render());
        }
        return _results;
      }
    };

    SpeciesIndexView.prototype.closeSubViews = function() {
      var subView, _i, _len, _ref, _results;
      if (this.subViews != null) {
        _ref = this.subViews;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          subView = _ref[_i];
          subView.onClose();
          _results.push(subView.close());
        }
        return _results;
      }
    };

    SpeciesIndexView.prototype.onClose = function() {
      this.closeSubViews();
      return this.stopListening(this.speciesList, 'sync', this.render);
    };

    return SpeciesIndexView;

  })(Backbone.View);

  (_base1 = window.Backbone).Models || (_base1.Models = {});

  window.Backbone.Models.Species = (function(_super) {

    __extends(Species, _super);

    function Species() {
      return Species.__super__.constructor.apply(this, arguments);
    }

    return Species;

  })(Backbone.Model);

  window.Backbone || (window.Backbone = {});

  (_base2 = window.Backbone).Collections || (_base2.Collections = {});

  Backbone.Collections.SpeciesCollection = (function(_super) {

    __extends(SpeciesCollection, _super);

    function SpeciesCollection() {
      return SpeciesCollection.__super__.constructor.apply(this, arguments);
    }

    SpeciesCollection.prototype.model = Backbone.Models.Species;

    SpeciesCollection.prototype.url = "data/species.json";

    SpeciesCollection.prototype.parse = function(data) {
      return data[0].animalia.concat(data[0].animalia);
    };

    return SpeciesCollection;

  })(Backbone.Collection);

  window.JST || (window.JST = {});

  window.JST['species_row'] = _.template("<%= model.get('species_name') %>");

  window.Backbone || (window.Backbone = {});

  (_base3 = window.Backbone).Views || (_base3.Views = {});

  Backbone.Views.SpeciesRowView = (function(_super) {

    __extends(SpeciesRowView, _super);

    function SpeciesRowView() {
      this.render = __bind(this.render, this);
      return SpeciesRowView.__super__.constructor.apply(this, arguments);
    }

    SpeciesRowView.prototype.template = JST['species_row'];

    SpeciesRowView.prototype.initialize = function(options) {
      this.model = options.model;
      return this.render();
    };

    SpeciesRowView.prototype.render = function() {
      return this.$el.html(this.template({
        model: this.model
      }));
    };

    SpeciesRowView.prototype.onClose = function() {};

    return SpeciesRowView;

  })(Backbone.View);

}).call(this);
