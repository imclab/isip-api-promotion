// Generated by CoffeeScript 1.4.0
(function() {
  var _base, _base1, _base2,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.JST || (window.JST = {});

  window.JST['species_index'] = _.template("<h1>Species</h1>\n<ul>\n  <%\n    var i, il, speciesModel;\n    for(i = 0, il=speciesModels.length; i<il; i++){\n      speciesModel = speciesModels[i];\n  %>\n    <li><%= speciesModel.get('species_name') %></li>\n  <%\n    }\n  %>\n</ul>");

  window.Backbone || (window.Backbone = {});

  (_base = window.Backbone).Views || (_base.Views = {});

  Backbone.Views.SpeciesIndexView = (function(_super) {

    __extends(SpeciesIndexView, _super);

    function SpeciesIndexView() {
      this.render = __bind(this.render, this);
      return SpeciesIndexView.__super__.constructor.apply(this, arguments);
    }

    SpeciesIndexView.prototype.template = JST['species_index'];

    SpeciesIndexView.prototype.initialize = function(options) {
      this.speciesList = new Backbone.Collections.SpeciesCollection();
      this.listenTo(this.speciesList, 'sync', this.render);
      this.speciesList.fetch();
      return this.render();
    };

    SpeciesIndexView.prototype.render = function() {
      console.log("rendering with:");
      console.log(this.speciesList.models);
      return this.$el.html(this.template({
        speciesModels: this.speciesList.models
      }));
    };

    SpeciesIndexView.prototype.onClose = function() {};

    return SpeciesIndexView;

  })(Backbone.View);

  (_base1 = window.Backbone).Models || (_base1.Models = {});

  window.Backbone.Models.Species = (function(_super) {

    __extends(Species, _super);

    function Species() {
      return Species.__super__.constructor.apply(this, arguments);
    }

    return Species;

  })(Backbone.Model);

  window.Backbone || (window.Backbone = {});

  (_base2 = window.Backbone).Collections || (_base2.Collections = {});

  Backbone.Collections.SpeciesCollection = (function(_super) {

    __extends(SpeciesCollection, _super);

    function SpeciesCollection() {
      return SpeciesCollection.__super__.constructor.apply(this, arguments);
    }

    SpeciesCollection.prototype.model = Backbone.Models.Species;

    SpeciesCollection.prototype.url = "data/species.json";

    SpeciesCollection.prototype.parse = function(data) {
      return _.union(data[0].animalia, data[0].animalia);
    };

    return SpeciesCollection;

  })(Backbone.Collection);

}).call(this);
