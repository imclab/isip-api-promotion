// Generated by CoffeeScript 1.4.0
(function() {
  var _base, _base1,
    __slice = [].slice;

  (_base = window.Backbone).Diorama || (_base.Diorama = {});

  Backbone.Diorama.Controller = (function() {

    function Controller() {}

    _.extend(Controller.prototype, Backbone.Events);

    Controller.prototype.changeStateOn = function() {
      var boundTransition, transitionBinding, transitionBindings, _i, _len, _results,
        _this = this;
      transitionBindings = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      this.stateEventBindings || (this.stateEventBindings = []);
      _results = [];
      for (_i = 0, _len = transitionBindings.length; _i < _len; _i++) {
        transitionBinding = transitionBindings[_i];
        boundTransition = (function() {
          var newState;
          newState = transitionBinding.newState;
          return function() {
            return _this.transitionToState(newState, arguments);
          };
        })();
        transitionBinding.publisher.on(transitionBinding.event, boundTransition);
        _results.push(this.stateEventBindings.push({
          publisher: transitionBinding.publisher,
          event: transitionBinding.event,
          transition: boundTransition
        }));
      }
      return _results;
    };

    Controller.prototype.clearStateEventBindings = function() {
      _.each(this.stateEventBindings, function(binding) {
        return binding.publisher.off(binding.event, binding.transition);
      });
      return this.stateEventBindings = [];
    };

    Controller.prototype.transitionToState = function(state, eventArguments) {
      this.clearStateEventBindings();
      return state.apply(this, eventArguments);
    };

    return Controller;

  })();

  (_base1 = window.Backbone).Diorama || (_base1.Diorama = {});

  Backbone.Diorama.ManagedRegion = (function() {

    function ManagedRegion(options) {
      this.tagName = (options != null ? options.tagName : void 0) || 'div';
      this.$el = $("<" + this.tagName + ">");
    }

    ManagedRegion.prototype.showView = function(view) {
      if (this.currentView) {
        this.currentView.close();
      }
      this.currentView = view;
      this.currentView.render();
      return this.$el.html(this.currentView.el);
    };

    ManagedRegion.prototype.isEmpty = function() {
      return this.$el.is(':empty');
    };

    return ManagedRegion;

  })();

  _.extend(Backbone.View.prototype, {
    bindTo: function(model, ev, callback) {
      model.bind(ev, callback, this);
      if (this.bindings == null) {
        this.bindings = [];
      }
      return this.bindings.push({
        model: model,
        ev: ev,
        callback: callback
      });
    },
    unbindFromAll: function() {
      if (this.bindings != null) {
        _.each(this.bindings, function(binding) {
          return binding.model.unbind(binding.ev, binding.callback);
        });
      }
      return this.bindings = [];
    },
    close: function() {
      this.unbindFromAll();
      this.unbind();
      this.remove();
      if (this.onClose) {
        return this.onClose();
      }
    }
  });

}).call(this);
